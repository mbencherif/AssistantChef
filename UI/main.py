import legumes, search              

from PyQt5 import QtCore, QtGui, QtWidgets

class Main(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(740, 410)
        self.gridLayout_3 = QtWidgets.QGridLayout(Form)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.label_4 = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.gridLayout_3.addWidget(self.label_4, 7, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.gridLayout_3.addWidget(self.label_3, 5, 0, 1, 1)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.radioButton_3 = QtWidgets.QRadioButton(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_3.setFont(font)
        self.radioButton_3.setObjectName("radioButton_3")
        self.gridLayout.addWidget(self.radioButton_3, 0, 2, 1, 1)
        self.radioButton = QtWidgets.QRadioButton(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton.setFont(font)
        self.radioButton.setObjectName("radioButton")
        self.gridLayout.addWidget(self.radioButton, 0, 0, 1, 1)
        self.radioButton_2 = QtWidgets.QRadioButton(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_2.setFont(font)
        self.radioButton_2.setObjectName("radioButton_2")
        self.gridLayout.addWidget(self.radioButton_2, 0, 1, 1, 1)
        self.radioButton_4 = QtWidgets.QRadioButton(Form)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButton_4.setFont(font)
        self.radioButton_4.setObjectName("radioButton_4")
        self.gridLayout.addWidget(self.radioButton_4, 0, 3, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout, 4, 0, 1, 1)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setObjectName("pushButton_3")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.pushButton_3)

        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setObjectName("lineEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.lineEdit)
        self.gridLayout_3.addLayout(self.formLayout, 2, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.gridLayout_3.addWidget(self.label_2, 3, 0, 1, 1)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.checkBox_3 = QtWidgets.QCheckBox(Form)
        self.checkBox_3.setObjectName("checkBox_3")
        self.gridLayout_2.addWidget(self.checkBox_3, 2, 0, 1, 1)
        self.checkBox = QtWidgets.QCheckBox(Form)
        self.checkBox.setObjectName("checkBox")
        self.gridLayout_2.addWidget(self.checkBox, 0, 0, 1, 1)
        self.checkBox_2 = QtWidgets.QCheckBox(Form)
        self.checkBox_2.setObjectName("checkBox_2")
        self.gridLayout_2.addWidget(self.checkBox_2, 1, 0, 1, 1)
        self.gridLayout_3.addLayout(self.gridLayout_2, 6, 0, 1, 1)
        self.label = QtWidgets.QLabel(Form)
        font = QtGui.QFont()
        font.setPointSize(25)
        font.setBold(False)
        font.setUnderline(True)
        font.setWeight(50)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setStyleSheet("")
        self.label.setObjectName("label")
        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(Form)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout_3.addWidget(self.lineEdit_2, 8, 0, 1, 1)

        self.pushButton_3.clicked.connect(self.openLegumes)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_4.setText(_translate("Form", "Si vous voulez évitez des ingrédients vous pouver les mentionner"))
        self.label_3.setText(_translate("Form", "Vous pouvez également imposer quelques contraintes "))
        self.radioButton_3.setText(_translate("Form", "Épices"))
        self.radioButton.setText(_translate("Form", "Légumes"))
        self.radioButton_2.setText(_translate("Form", "Viandes"))
        self.radioButton_4.setText(_translate("Form", "Fruits"))
        self.pushButton_3.setText(_translate("Form", "Rechercher"))
        self.label_2.setText(_translate("Form", "Vous pouvez selectionner les ingrédients disponible"))
        self.checkBox_3.setText(_translate("Form", "CheckBox"))
        self.checkBox.setText(_translate("Form", "Végétarien"))
        self.checkBox_2.setText(_translate("Form", "Sous Régime alimentaire"))
        self.label.setText(_translate("Form", "Assistant chef cuisinier"))


    def openLegumes(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = legumes.Legumes(self)
        self.ui.setupUi(self.window)
        self.window.show()

    def showLegumes(self, myLeg):
        searchC = search.Search(myLeg, 'French_corpus.txt')
        text = searchC.getRecipe(1)
        recipeKeyWords = searchC.getKeyWords(text)
        # print(recipeKeyWords)
        query = str(self.lineEdit.text())
        cleanQuery = searchC.getKeyWords(query)
        print(cleanQuery)
        # print(searchC.compare(recipeKeyWords))
        # print(myLeg)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Main()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())

